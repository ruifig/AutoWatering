; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = earlephilhower_debug

;
; Custom data group
; can be use in [env:***] via ${common.***}
[common]
picoprobe_tools_path = B:/Utils/Picoprobe
framework = arduino
build_unflags = 
	-std=c++11
	-std=gnu++11
	-std=c++14
	-std=gnu++14
build_flags = 
	-std=c++17
	-std=gnu++17
	;
	; Settings for TFT_eSPI
	;
	-DUSER_SETUP_LOADED=1 ; If this is set, User_Setup_Select.h file will not load the user setting header files
	; Define the TFT driver, pins etc here:
	-DILI9341_DRIVER=1
	;-DTFT_WIDTH=320 ; These are defined by the code if using the ILI9341 driver
	;-DTFT_HEIGHT=240
	-DTFT_MISO=04
	-DTFT_SCLK=06
	-DTFT_MOSI=07
	-DTFT_RST=08
	-DTFT_DC=09
	-DTFT_BL=10
	-DTFT_CS=11
	; TFT_eSPI expects us to set TOUCH_CS if we want it to implement touch screen support.
	; But since it doesn't automatically make use of interrupts out of the box, I'm using a separate library that already.
	; Therefore, I'm not calling this TOUCH_CS but TOUCH_MY_CS so it doesn't get picked up by TFT_eSPI.
	-DTOUCH_MY_CS=12
	-DTOUCH_MY_IRQ=13
	;-DTOUCH_MY_IRQ=16
	; Other settings
	-DLOAD_GLCD=1
	-DLOAD_FONT2=1
	-DLOAD_FONT4=1
	-DLOAD_FONT6=1
	-DLOAD_FONT7=1
	-DLOAD_FONT8=1
	-DLOAD_GFXFF=1
	-DSMOOTH_FONT=1
	-DSPI_FREQUENCY=27000000

lib_deps = 
	bodmer/TFT_eSPI@^2.5.23
	; https://github.com/khoih-prog/AsyncMQTT_Generic#48a17e045fa3f8945524b3f5a87f96c075a505de
	; Since my czmicromuc is in active development, I'm expecting it to exist in a folder at the same level as this PIO project
	czmicromuc = symlink://../czmicromuc/lib
	https://github.com/monstrenyatko/ArduinoMqtt


; AsyncMQTT_Generic includes all possile libraries for all boards/platforms.
; It's up to the user to ignore the ones not needed for the board being used. See https://github.com/khoih-prog/AsyncMQTT_Generic/issues/5
lib_ignore =
	STM32AsyncTCP

;lib_compat_mode = strict
;lib_ldf_mode = chain+

[earlephilhower]
extends = common
board = rpipicow
platform = https://github.com/maxgerhardt/platform-raspberrypi#5a533d6b36844183bb72794bc53091206165e921
;platform = https://github.com/maxgerhardt/platform-raspberrypi
board_build.core = earlephilhower
upload_protocol = custom
upload_command = ${common.picoprobe_tools_path}/upload_openocd.bat "$BUILD_DIR/${PROGNAME}.elf" "$PROJECT_DIR"
debug_tool = custom
debug_server = 
	${common.picoprobe_tools_path}/debug_openocd.bat
debug_port = localhost:3333
debug_init_break = 

	;
	; From https://community.platformio.org/t/attach-debugger-to-running-program-without-reset/18285/2
	;
; debug_load_mode = manual
	; do not reset board upon connecting
;debug_init_cmds =
;  target extended-remote $DEBUG_PORT
;  $INIT_BREAK
;  monitor halt
;  monitor init
;  monitor resume
	; this is a guess based on the openocd commands 
	; in http://openocd.org/doc/html/General-Commands.html
	; maybe also needs monitor reset run
	; or monitor reset init

[env:earlephilhower_debug]
extends = earlephilhower
build_type = debug
build_unflags = 
	${common.build_unflags}
	-fomit-frame-pointer
build_flags = 
	${common.build_flags}
	-D_DEBUG
	-DDEBUG
	-DCZ_TEMPORARY_STRING_MAX_SIZE=512
	-DCZ_TEMPORARY_STRING_MAX_NESTING=10
	-DCZ_LOG_ENABLED=1
	-DCZ_SERIAL_LOG_ENABLED=1
	-DCZ_PROFILER=1
	-DCONSOLE_COMMANDS=1
	; from https://arduino-pico.readthedocs.io/en/latest/platformio.html
	-DDEBUG_RP2040_WIRE
	;-DDEBUG_RP2040_SPI
	-DDEBUG_RP2040_CORE
	-DDEBUG_RP2040_PORT=Serial
debug_build_flags = -O0 -ggdb3 -g3

[env:earlephilhower_release]
extends = earlephilhower
build_type = release
build_unflags = 
	${common.build_unflags}
build_flags = 
	${common.build_flags}
	-DNDEBUG
	-DCZ_TEMPORARY_STRING_MAX_SIZE=512
	-DCZ_TEMPORARY_STRING_MAX_NESTING=10
	-DCZ_LOG_ENABLED=0
	-DCZ_SERIAL_LOG_ENABLED=0
	-DCZ_PROFILER=0
	-DCONSOLE_COMMANDS=0
	-DASYNCTCP_RP2040W_DEBUG_PORT=Serial1
	-D_ASYNCTCP_RP2040W_LOGLEVEL_=4
	-ggdb3 -g3


