; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = earlephilhower_debug

;
; Custom data group
; can be use in [env:***] via ${common.***}
[common]
picoprobe_tools_path = B:/Utils/Picoprobe
framework = arduino
build_unflags = 
	-std=c++11
	-std=gnu++11
	-std=c++14
	-std=gnu++14
build_flags = 
	-include "$PROJECT_DIR/src/config/custom/Greenhouse.h"
	-I "${platformio.packages_dir}/framework-arduinopico/libraries/WiFi/src"
	-std=c++17
	-std=gnu++17
	-DCZ_TEMPORARY_STRING_MAX_SIZE=512
	-DCZ_TEMPORARY_STRING_MAX_NESTING=10

lib_extra_dirs =
	./temp/extra_deps

	;
	;
	; These need to be by order of dependency, because when building a given library, PlatformIO will add -I parameters only for libraries defines before
lib_deps = 
	; Default libraries coming from Arduino-Pico
	SPI
	Wire
	LittleFS
	MD5Builder
	PicoOTA
	Updater
	lwIP_CYW43
	lwIP-Ethernet
	WiFi
	; Libraries from the web
	bodmer/TFT_eSPI@^2.5.23
	https://github.com/monstrenyatko/ArduinoMqtt
	; libraries in the ./temp/extra_deps folder
	czmicromuc
	; Libraries in the ./lib folder
	Adafruit_MCP23017
	Adafruit_HTU21DF_Library
	XPT2046_Touchscreen
	AT24C

;lib_compat_mode = strict
;lib_ldf_mode = chain+
lib_ldf_mode = off

[earlephilhower]
extends = common
board = rpipicow
platform = https://github.com/maxgerhardt/platform-raspberrypi#5a533d6b36844183bb72794bc53091206165e921
;platform = https://github.com/maxgerhardt/platform-raspberrypi
board_build.core = earlephilhower
upload_protocol = custom
upload_command = ${common.picoprobe_tools_path}/upload_openocd.bat "$BUILD_DIR/${PROGNAME}.elf" "$PROJECT_DIR"
debug_tool = custom
debug_server = 
	${common.picoprobe_tools_path}/debug_openocd.bat
debug_port = localhost:3333
; Controls if the debugger automatically breaks at main
debug_init_break = 

	;
	; From https://community.platformio.org/t/attach-debugger-to-running-program-without-reset/18285/2
	;
	; this is a guess based on the openocd commands 
	; in http://openocd.org/doc/html/General-Commands.html
	; maybe also needs monitor reset run
	; or monitor reset init
debug_load_mode = manual
	; do not reset board upon connecting
debug_init_cmds =
  target extended-remote $DEBUG_PORT
  $INIT_BREAK
  monitor halt
  monitor init
  monitor resume

[env:earlephilhower_debug]
extends = earlephilhower
build_type = debug
build_unflags = 
	${common.build_unflags}
	-fomit-frame-pointer
build_flags = 
	${common.build_flags}
	-D_DEBUG
	-DDEBUG
	; from https://arduino-pico.readthedocs.io/en/latest/platformio.html
	-DDEBUG_RP2040_WIRE
	-DDEBUG_RP2040_CORE
	-DDEBUG_RP2040_PORT=Serial
debug_build_flags = -O0 -ggdb3 -g3

[env:earlephilhower_release]
extends = earlephilhower
build_type = release
build_unflags = 
	${common.build_unflags}
build_flags = 
	${common.build_flags}
	-DNDEBUG
	-ggdb3 -g3


